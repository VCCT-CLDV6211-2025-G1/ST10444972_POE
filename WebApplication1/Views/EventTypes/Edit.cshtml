@model WebApplication1.Models.EventType

@{
    ViewData["Title"] = "Edit Event Type";
}

<div class="container-fluid pt-4">
    <h1>Edit Event Type</h1>

    <div class="row">
        <div class="col-md-8">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="EventTypeId" />
                
                <div class="form-group mb-3">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Description" class="form-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group mb-3 form-check">
                    <input asp-for="IsActive" class="form-check-input" />
                    <label asp-for="IsActive" class="form-check-label"></label>
                    <span asp-validation-for="IsActive" class="text-danger"></span>
                </div>
                <div class="form-group mt-4">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
            </form>
        </div>
    </div>

    <div class="mt-4">
        <div class="alert alert-info">
            <i class="bi bi-info-circle"></i>
            <strong>Note:</strong> Setting an event type to inactive will not affect existing events, but it will prevent new events from being created with this type.
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
