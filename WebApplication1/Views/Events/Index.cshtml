@model (IEnumerable<WebApplication1.Models.Event> Events, WebApplication1.Models.EventFilterViewModel Filter)

@{
    ViewData["Title"] = "Events";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1>Events</h1>
        <p class="text-muted">View and manage events</p>
    </div>
    <div>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create New Event
        </a>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-light">
        <h5 class="card-title mb-0">Filter Events</h5>
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get" id="filterForm">
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="searchTerm" class="form-label">Search</label>
                    <input name="searchTerm" value="@Model.Filter.SearchTerm" class="form-control" placeholder="Search events...">
                </div>
                <div class="col-md-4">
                    <label for="eventTypeId" class="form-label">Event Type</label>
                    <select name="eventTypeId" class="form-select">
                        <option value="">All Types</option>
                        @if (Model.Filter.EventTypes != null)
                        {
                            @foreach (var type in Model.Filter.EventTypes)
                            {
                                <option value="@type.EventTypeId" selected="@(Model.Filter.EventTypeId == type.EventTypeId)">@type.Name</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="venueId" class="form-label">Venue</label>
                    <select name="venueId" class="form-select">
                        <option value="">All Venues</option>
                        @if (Model.Filter.Venues != null)
                        {
                            @foreach (var venue in Model.Filter.Venues)
                            {
                                <option value="@venue.VenueId" selected="@(Model.Filter.VenueId == venue.VenueId)">@venue.VenueName</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input name="startDate" value="@Model.Filter.StartDate?.ToString("yyyy-MM-dd")" class="form-control" type="date">
                </div>
                <div class="col-md-4">
                    <label for="endDate" class="form-label">End Date</label>
                    <input name="endDate" value="@Model.Filter.EndDate?.ToString("yyyy-MM-dd")" class="form-control" type="date">
                </div>
                <div class="col-md-4">
                    <label for="status" class="form-label">Status</label>
                    <select name="status" class="form-select">
                        <option value="">All Statuses</option>
                        <option value="scheduled" selected="@(Model.Filter.Status == "scheduled")">Scheduled</option>
                        <option value="confirmed" selected="@(Model.Filter.Status == "confirmed")">Confirmed</option>
                        <option value="cancelled" selected="@(Model.Filter.Status == "cancelled")">Cancelled</option>
                        <option value="completed" selected="@(Model.Filter.Status == "completed")">Completed</option>
                    </select>
                </div>
<div class="col-12">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search"></i> Apply Filters
                    </button>
                    <a asp-action="Index" asp-route-searchTerm="" asp-route-eventTypeId="" asp-route-venueId="" 
                       asp-route-startDate="" asp-route-endDate="" asp-route-status="" 
                       class="btn btn-outline-secondary">Clear Filters</a>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Event</th>
                <th>Date & Time</th>
                <th>Venue</th>
                <th>Type</th>
                <th>Status</th>
                <th class="text-end">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Events)
            {
                <tr>
                    <td>
                        <strong>@item.EventName</strong>
                        <div class="text-muted small">@item.Description</div>
                    </td>
                    <td>
                        <div>@item.StartDate.ToString("MMM dd, yyyy")</div>
                        <div class="text-muted small">
                            @item.StartDate.ToString("HH:mm") - @item.EndDate.ToString("HH:mm")
                        </div>
                    </td>
                    <td>@(item.Venue?.VenueName ?? "No venue")</td>
                    <td>@(item.EventType?.Name ?? "Unspecified")</td>
                    <td>
                        @{
                            var statusClass = item.Status.ToLower() switch
                            {
                                "scheduled" => "bg-info",
                                "confirmed" => "bg-success",
                                "cancelled" => "bg-danger",
                                "completed" => "bg-secondary",
                                _ => "bg-secondary"
                            };
                        }
                        <span class="badge @statusClass">@item.Status</span>
                    </td>
                    <td class="text-end">
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.EventId" class="btn btn-sm btn-outline-primary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.EventId" class="btn btn-sm btn-outline-info">Details</a>
                            @if (item.CanModify())
                            {
                                <form asp-action="Cancel" asp-route-id="@item.EventId" method="post" class="d-inline" 
                                      onsubmit="return confirm('Are you sure you want to cancel this event?');">
                                    <button type="submit" class="btn btn-sm btn-outline-danger">Cancel</button>
                                </form>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (!Model.Events.Any())
{
    <div class="alert alert-info">
        No events found matching your criteria.
    </div>
}

@section Scripts {
    <script>
        // Handle search input with debounce
        let timeout;
        const searchInput = document.querySelector('input[name="searchTerm"]');
        if (searchInput) {
            searchInput.addEventListener('input', (e) => {
                clearTimeout(timeout);
                timeout = setTimeout(() => {
                    document.getElementById('filterForm').submit();
                }, 500);
            });
        }
    </script>
}
